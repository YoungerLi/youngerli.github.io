<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo的Next主题详细配置]]></title>
    <url>%2F2017%2F12%2F02%2FHexo%E7%9A%84Next%E4%B8%BB%E9%A2%98%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[经过一番不懈的努力，我们终于按照Hexo免费搭建一个属于自己的博客搭建好了一个属于自己的博客，并且还安装了一个Next主题，但是我们的博客一开始还是很简陋的，我们需要把她装修一下。 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件。 以下所有终端执行的命令都在你的Hexo根目录下 1、基本信息配置 基本信息包括：博客标题、作者、描述、语言等等。 打开 站点配置文件 ，找到Site模块123456title: 标题subtitle: 副标题description: 描述author: 作者language: 语言（简体中文是zh-Hans）timezone: 网站时区（Hexo 默认使用您电脑的时区，不用写） 关于 站点配置文件 中的其他配置可参考站点配置 2、菜单设置 菜单包括：首页、归档、分类、标签、关于等等 我们刚开始默认的菜单只有首页和归档两个，不能够满足我们的要求，所以需要添加菜单，打开 主题配置文件 找到Menu Settings123456789menu: home: / || home //首页 archives: /archives/ || archive //归档 categories: /categories/ || th //分类 tags: /tags/ || tags //标签 about: /about/ || user //关于 #schedule: /schedule/ || calendar //日程表 #sitemap: /sitemap.xml || sitemap //站点地图 #commonweal: /404/ || heartbeat //公益404 看看你需要哪个菜单就把哪个取消注释打开就行了；关于后面的格式，以archives: /archives/ || archive为例：|| 之前的/archives/表示标题“归档”，关于标题的格式可以去themes/next/languages/zh-Hans.yml中参考或修改||之后的archive表示图标，可以去Font Awesome中查看或修改，Next主题所有的图标都来自Font Awesome。 3、Next主题样式设置我们百里挑一选择了Next主题，不过Next主题还有4种风格供我们选择，打开 主题配置文件 找到Scheme Settings12345# Schemes# scheme: Muse# scheme: Mist# scheme: Piscesscheme: Gemini 4种风格大同小异，本人用的是Gemini风格，你们可以选择自己喜欢的风格。 4、侧栏设置 侧栏设置包括：侧栏位置、侧栏显示与否、文章间距、返回顶部按钮等等 打开 主题配置文件 找到sidebar字段12345678910111213141516sidebar:# Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效） position: left //靠左放置 #position: right //靠右放置# Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效） #display: post //默认行为，在文章页面（拥有目录列表）时显示 display: always //在所有页面中都显示 #display: hide //在所有页面中都隐藏（可以手动展开） #display: remove //完全移除 offset: 12 //文章间距（只对Pisces | Gemini两种风格有效） b2t: false //返回顶部按钮（只对Pisces | Gemini两种风格有效） scrollpercent: true //返回顶部按钮的百分比 5、头像设置打开 主题配置文件 找到Sidebar Avatar字段12# Sidebar Avataravatar: /images/header.jpg 这是头像的路径，只需把你的头像命名为header.jpg（随便命名）放入themes/next/source/images中，将avatar的路径名改成你的头像名就OK啦！ 6、设置RSS1、先安装 hexo-generator-feed 插件1$ npm install hexo-generator-feed --save 2、打开 站点配置文件 找到Extensions在下面添加123456789# RSS订阅feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: &apos; &apos; 3、打开 主题配置文件 找到rss，设置为1rss: /atom.xml 7、添加分类模块1、新建一个分类页面1$ hexo new page categories 2、你会发现你的source文件夹下有了categorcies/index.md，打开index.md文件将title设置为title: 分类3、打开 主题配置文件 找到menu，将categorcies取消注释4、把文章归入分类只需在文章的顶部标题下方添加categories字段，即可自动创建分类名并加入对应的分类中举个栗子：12title: 分类测试文章标题categories: 分类名 8、添加标签模块1、新建一个标签页面1$ hexo new page tags 2、你会发现你的source文件夹下有了tags/index.md，打开index.md文件将title设置为title: 标签3、打开 主题配置文件 找到menu，将tags取消注释4、把文章添加标签只需在文章的顶部标题下方添加tags字段，即可自动创建标签名并归入对应的标签中举个栗子：12345title: 标签测试文章标题tags: - 标签1 - 标签2 ... 9、添加关于模块1、新建一个关于页面1$ hexo new page about 2、你会发现你的source文件夹下有了about/index.md，打开index.md文件即可编辑关于你的信息，可以随便编辑。3、打开 主题配置文件 找到menu，将about取消注释 10、添加搜索功能1、安装 hexo-generator-searchdb 插件1$ npm install hexo-generator-searchdb --save 2、打开 站点配置文件 找到Extensions在下面添加123456# 搜索search: path: search.xml field: post format: html limit: 10000 3、打开 主题配置文件 找到Local search，将enable设置为true 11、添加阅读全文按钮因为在你的博客主页会有多篇文章，如果你想让你的文章只显示一部分，多余的可以点击阅读全文来查看，那么你需要在你的文章中添加1&lt;!--more--&gt; 其后面的部分就不会显示了，只能点击阅读全文才能看 12、修改文章内链接文本样式打开文件 themes/next/source/css/_common/components/post/post.styl，在末尾添加12345678910.post-body p a &#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 其中选择 .post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。 13、设置网站缩略图标 从网上看了很多设置方法都是说把favicon.ico放到站点目录的source目录下就可以了，可是我试了好多遍，并不行。 我的设置方法是这样的：把你的图片（png或jpg格式，不是favicon.ico）放在themes/next/source/images里，然后打开 主题配置文件 找到favicon，将small、medium、apple_touch_icon三个字段的值都设置成/images/图片名.jpg就可以了，其他字段都注释掉。 14、设置文章字体的颜色、大小如果想设置某一句的颜色或大小，只需用html语法写出来就行了1234接下来就是见证奇迹的时刻&lt;font color=&quot;#FF0000&quot;&gt; 我可以设置这一句的颜色哈哈 &lt;/font&gt; &lt;font size=6&quot;&gt; 我还可以设置这一句的大小嘻嘻 &lt;/font&gt; &lt;font size=5 color=&quot;#FF0000&quot;&gt; 我甚至可以设置这一句的颜色和大小呵呵&lt;/font&gt; 15、添加评论系统 目前国内比较有名的多说、网易云跟帖评论系统都已停止服务了，国外的Disqus评论系统还得需要翻墙，所以不推荐使用，剩下的还有搜狐畅言、友言、来必力等。本来想使用畅言的，结果注册完之后还得要求备案，我只想说F开头的那个单词，果断放弃。后来选择了友言 1、进入友言官网注册、登录步骤我就不介绍了2、登录完成之后，点击获取代码，你会发现出来了一段代码，里面有你的uid=12345673、打开 主题配置文件 找到youyan_uid将值设置为上面的uid就可以了 16、更多1、还有其他更多的主题配置，请查看主题配置2、还有其他更多的插件，请查看Hexo插件]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo免费搭建一个属于自己的博客]]></title>
    <url>%2F2017%2F11%2F21%2FHexo%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[作为一个多年的iOS开发者，而且喜欢自己没事的时候写点东西以供他人分享，都想要有一个属于自己的、网址上带有自己名字的博客，有的人用简书或者GitHub来写文章，不过那些都是第三方平台，不是自己的，只有属于自己的一个博客才会显得很酷很装逼有没有😝，OK接下来咱们开始搭建吧！ 一、前言该博客用的是Hexo框架，基于Node.js，搭建博客首先需要有一个GitHub账号并且配置了SSH Keys（申请步骤这里就不介绍了，网上教程很多），然后在GitHub里创建一个名为username.github.io的仓库，还需要安装Git、安装Node.js、安装Hexo 二、准备工作1、创建GitHub仓库创建一个名为username.github.io的仓库在GitHub中新建仓库相信你们都会，点击New repository创建，注意：仓库名称一定是username.github.io这种格式，username替换一个你喜欢的名字。 2、安装Git如果已安装可跳过方法一、通过HomeBrew来安装123先安装HomeBrew（如果已安装可跳过）终端执行命令 $ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;然后安装git $ brew install git 方法二、你也可以通过下载安装程序来安装 验证：执行git --version如果输出类似git version 2.15.0说明安装成功了 3、安装Node.js先安装nvm，这是Node.js版本管理器，可以轻松切换Node.js版本。 这里有两种方式安装。如果使用curl的方式安装，安装完成之后一定要重启终端。 方法一、通过HomeBrew来安装（推荐）1$ brew install node 方法二、curl安装方式123$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh安装完成后，重启终端并执行下列命令即可安装 Node.js$ nvm install stable 验证：执行npm --version如果输出类似5.5.1说明安装成功了 4、安装Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo1$ npm install -g hexo-cli 三、建站1、创建资源安装 Hexo 完成后，在你喜欢的目录下新建一个文件夹命名为username（替换成你喜欢的名字），然后cd到username文件夹下123$ cd username$ hexo init$ npm install 执行完毕后你将看到在你刚创建的文件夹下会有很多资源 2、基础配置接下来打开username下的_config.yml文件（上图中的第一个文件），修改一下里面几个关键的信息，修改完记得保存，注意：冒号后面要有空格。123title: my_杨哥 //你博客的名字author: Li Yang //你的名字language: zh-Hans //语言-简体中文 上面这3个字段是关键信息，如需修改其他信息请参考配置 3、主题安装username下的themes文件夹中存放的是主题，默认的是landscape主题，如果你不喜欢可以安装其他主题。NexT主题是一套简约的主题，是目前使用最火的一个主题，下面我们安装一下该主题，你也可参考安装NexT。Hexo还有更多主题供你选择 安装NexT主题： 12$ cd username //进入到username文件夹下$ git clone https://github.com/iissnan/hexo-theme-next themes/next 启用NexT主题：打开username下的_config.yml文件（上图中的第一个文件），找到theme字段将其值更改为next 验证主题：注意：每次切换主题之后、验证主题之前都要清除 Hexo 的缓存 1$ hexo clean //清除缓存 开始验证：启动Hexo本地服务器 1$ hexo s 然后你将会看到终端输出 1INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 这行的意思是说你用浏览器打开 http://localhost:4000 便可看到你的博客了，这只是本地的测试，如果测试没问题就执行Ctrl+C退出去，此时该地址就不能访问了。 OK，现在，你已经成功安装并启用了 NexT 主题。接下来就是对该主题的一些设置，详细可参考NexT主题设定 四、写作以上所有的工作都完成了，并设置了一套你自己喜欢的主题样式，接下来就可以写博客了。 1、新建一篇文章1$ hexo new layout title layout：模板，如果不写将使用默认模板，一般不写，直接$ hexo new titletitle：文章标题，如果标题包含空格的话，请使用引号括起来。新建的文章将会存在username/source/_posts中，_posts就是默认模板，文章文件名称将会是title.md，接下来就可以打开该文件进行编辑写你的文章了。 2、生成静态文件写完文章之后执行，来生成静态网页文件1$ hexo g //hexo generate的缩写 3、启动本地服务器1$ hexo s //hexo server的缩写 本地服务器启动完之后就如同上面验证主题一样，访问 http://localhost:4000 来验证一下你写的文章预览效果。 4、部署网站安装部署工具1$ npm install hexo-deployer-git --save 安装完毕后打开username下的_config.yml文件，翻到最底部找到deploy节点编辑如下：1234deploy: type: git repository: https://github.com/YoungerLi/youngerli.github.io.git branch: master 其中https://github.com/YoungerLi/youngerli.github.io.git就是你GitHub中创建的仓库地址，在这复制即可最后，部署网站1$ hexo d //hexo deploy的缩写 第一次执行这一步的时候会让你输入你的GitHub的用户名及密码，输入正确无误后执行完毕，任何人就可以访问 https://youngerli.github.io 进入你的博客了。 以后每次写完文章之后依次执行以下命令就可以发布更新了123$ hexo clean // 清除缓存$ hexo g // 生成静态网页文件$ hexo d // 将本地博客发布到github 五、更多经过一番不懈的努力，我们终于搭建好了一个属于自己的博客，并且还安装了一个Next主题，但是我们的博客一开始还是很简陋的，我们需要把她装修一下，怎么装修呢？来看看Hexo的Next主题详细配置]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOS安装CocoaPods详细过程]]></title>
    <url>%2F2017%2F11%2F15%2FiOS%E5%AE%89%E8%A3%85CocoaPods%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[一、简介 什么是CocoaPodsCocoaPods是OS X和iOS下的一个第三类库管理工具，通过CocoaPods工具我们可以为项目添加被称为“Pods”的依赖库（这些类库必须是CocoaPods本身所支持的），并且可以轻松管理其版本。 CocoaPods的好处1、在引入第三方库时它可以自动为我们完成各种各样的配置，包括配置编译阶段、连接器选项、甚至是ARC环境下的-fno-objc-arc配置等。2、使用CocoaPods可以很方便地查找新的第三方库，这些类库是比较“标准的”，而不是网上随便找到的，这样可以让我们找到真正好用的类库。 二、Cocoapods安装步骤 注意：在终端输入命令时，取$后面部分输入 1、升级Ruby环境1终端输入：$ gem update --system 此时会出现 这是因为你没有权限去升级Ruby1这时应该输入：$ sudo gem update --system 此时会出现 接下来输入密码，注意：输入密码的时候没有任何反应，光标也不会移动，你尽管输入就是了，输完了直接回车。等一会如果出现 恭喜你，升级Ruby成功了。 2、更换Ruby镜像首先移除现有的Ruby镜像1终端输入：$ gem sources --remove https://rubygems.org/ 然后添加国内最新镜像源（淘宝的Ruby镜像已经不更新了）1终端输入：$ gem sources -a https://gems.ruby-china.org/ 执行完毕之后输入gem sources -l来查看当前镜像1终端输入：$ gem sources -l 如果结果是*** CURRENT SOURCES ***https://gems.ruby-china.org/说明添加成功，否则继续执行$ gem source -a https://gems.ruby-china.org/来添加 3、安装CocoaPods接下来开始安装1终端输入：$ sudo gem install cocoapods 如果出现这个说明没有权限，需要输入1终端输入：$ sudo gem install -n /usr/local/bin cocoapods 安装成功如下： 到这之后再执行pod setup（PS：这个过程是漫长的，要有耐心）1终端输入：$ pod setup 然后你会看到出现了Setting up CocoaPods master repo，卡住不动了，说明Cocoapods在将它的信息下载到 ~/.cocoapods里。你可以command+n新建一个终端窗口，执行cd ~/.cocoapods/进入到该文件夹下，然后执行du -sh *来查看文件大小，每隔几分钟查看一次，这个目录最终大小是900多M（我的是930M）当出现Setup completed的时候说明已经完成了。 哈哈，太不容易了，终于走到这一步了，终于安装完成了，那么到底能不能用呢？咱们接着往下看！注意：以上所有的步骤都是为这台电脑配置CocoaPods环境，以下才是真正的把CocoaPods安装到你的工程里面。 4、CocoaPods的使用1、首先我们来搜索一下三方库1终端输入：$ pod search AFNetworking 这时有可能出现这是因为之前pod search的时候生成了缓存文件search_index.json执行rm ~/Library/Caches/CocoaPods/search_index.json来删除该文件然后再次输入pod search AFNetworking进行搜索这时会提示Creating search index for spec repo &#39;master&#39;..等待一会将会出现搜索结果如下： 出现这个了就说明搜索成功了，看一下上图中的这一句：pod &#39;AFNetworking&#39;, &#39;~&gt; 3.1.0&#39;这句话一会我们要用到，这是CocoaPods添加三方库的关键字段然后退出这个界面（这一步只是验证一下cocoapods有没有安装成功，能不能搜索到你想要的三方库），直接按”q”就退出去了。 如果搜索到的版本不是最新的，请查看iOS解决CocoaPods搜索不到最新版SDK的问题 2、在工程中创建一个Podfile文件要想在你的工程中创建Podfile文件，必须先要进到该工程目录下12终端输入：$ cd /Users/liyang/Desktop/CocoaPodsTest//这是我电脑上的路径，你输入你自己项目的路径或直接拖拽也行 进来之后就创建1终端输入：$ touch Podfile 然后你在你的工程目录下可以看到多了一个Podfile文件 3、编辑你想导入的第三方库的名称及版本使用vim编辑Podfile文件1终端输入：$ vim Podfile 进入如下界面： 进来之后紧接着按键盘上的英文&#39;i&#39;键下面的&quot;Podsfile&quot; 0L, 0C将变成-- INSERT --然后就可以编辑文字了，输入以下文字1234platform :ios, &apos;7.0&apos;target &apos;MyApp&apos; dopod &apos;AFNetworking&apos;, &apos;~&gt; 3.1.0&apos;end 解释一下platform :ios, &#39;7.0&#39;代表当前AFNetworking支持的iOS最低版本是iOS 7.0,&#39;MyApp&#39;就是你自己的工程名字， pod &#39;AFNetworking&#39;, &#39;~&gt; 3.1.0&#39;代表要下载的AFNetworking版本是3.1.0及以上版本，还可以去掉后面的&#39;~&gt; 3.1.0&#39;，直接写pod &#39;AFNetworking&#39;，这样代表下载的AFNetworking是最新版。 编辑完之后成如下样子：此时该退出去了，怎么退出去呢？跟着我做，先按左上角的esc键，再按：键，再输入wq，点击回车，就保存并退出去了。 这时候，你会发现你的项目目录中名字为Podfile的文件的内容就是你刚刚输入的内容。 4、把该库下载到Xcode中1终端输入：$ pod install 这就开始下载了，需要一段时间，出现如下界面就说明安装好了 这个时候关闭所有的Xcode窗口，再次打开工程目录会看到多了一个后缀名为.xcworkspace文件。 以后打开工程就双击这个文件打开了，而不再是打开.xcodeproj文件。进入工程后引入头文件不再是#import &quot;AFNetworking.h&quot;，而是#import &lt;AFNetworking.h&gt; 转载请联系作者获取授权，并标明文章作者，谢谢，有良知有道德的人！]]></content>
      <categories>
        <category>iOS开发</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>CocoaPods</tag>
      </tags>
  </entry>
</search>
